{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dev\\\\OneDrive\\\\Documents\\\\Blockchain KYC\\\\KYC_Blockchain\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport KycBlockChain from \"./contracts/KycBlockChain.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nconst crypto = require(\"crypto\");\n\nconst GetAllBankAccounts = props => {\n  if (parseInt(props.bankcount) > 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, props.banks.map(bank => React.createElement(\"p\", {\n      key: bank.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, bank.address)));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"There are no verified Bank Accounts in this network!\"));\n  }\n};\n\nconst GetAllBankRequests = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.bankrequests.map(request => React.createElement(\"p\", {\n    key: request.key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, request.name, \" - \", request.address)));\n}; //------tab navigation starts here--------\n\n\nconst hideAll = () => {\n  document.getElementsByClassName(\"new-customer\")[0].style.display = \"none\";\n  document.getElementsByClassName(\"existing-customer\")[0].style.display = \"none\";\n  document.getElementsByClassName(\"existing-customer\")[1].style.display = \"none\";\n  document.getElementsByClassName(\"new-bank\")[0].style.display = \"none\";\n  document.getElementsByClassName(\"existing-bank\")[0].style.display = \"none\";\n  document.getElementsByClassName(\"existing-bank\")[1].style.display = \"none\";\n  let elements = document.querySelectorAll(\".active-button\");\n\n  for (var i = 0; i < elements.length; i++) {\n    elements[i].classList.remove(\"active-button\");\n  }\n};\n\nconst show = target => {\n  hideAll();\n  document.getElementById(\"\".concat(target, \"-button\")).classList.add(\"active-button\");\n\n  if (target === \"new-customer\") {\n    document.getElementsByClassName(\"new-customer\")[0].style.display = \"block\";\n  }\n\n  if (target === \"existing-customer\") {\n    document.getElementsByClassName(\"existing-customer\")[0].style.display = \"block\";\n    document.getElementsByClassName(\"existing-customer\")[1].style.display = \"block\";\n  } // if (target === \"existing-bank\") {\n  //   document.getElementsByClassName(\"existing-bank\")[0].style.display = \"block\";\n  //   document.getElementsByClassName(\"existing-bank\")[1].style.display = \"block\";\n  // }\n\n\n  if (target === \"new-bank\") {\n    document.getElementsByClassName(\"new-bank\")[0].style.display = \"block\";\n  }\n}; //------tab navigation ends here--------\n//setting state values\n\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      account: null,\n      contract: null,\n      name: null,\n      aadhar: null,\n      pan: null,\n      getdata: null,\n      data_hash: null,\n      b_name: null,\n      bank_verify: null,\n      entity: null,\n      allaccounts: null,\n      allbanks: [],\n      bank_count: 0,\n      status: null,\n      requestAddress: null,\n      bankrequests: [],\n      aadharVerify: null,\n      panVerify: null,\n      verified: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = KycBlockChain.networks[networkId];\n        const instance = new web3.eth.Contract(KycBlockChain.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: accounts[0],\n          contract: instance,\n          allaccounts: accounts\n        });\n        this.whoami();\n        this.numbanks();\n        this.onAccountChanged();\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n\n      show(\"new-customer\");\n    };\n\n    this.myNameChangeHandler = event => {\n      this.setState({\n        name: event.target.value\n      });\n    };\n\n    this.myAadharChangeHandler = event => {\n      this.setState({\n        aadhar: event.target.value\n      });\n    };\n\n    this.myPanChangeHandler = event => {\n      this.setState({\n        pan: event.target.value\n      });\n    };\n\n    this.myBankNameChangeHandler = event => {\n      this.setState({\n        bname: event.target.value\n      });\n    };\n\n    this.myVBankChangeHandler = event => {\n      this.setState({\n        bank_verify: event.target.value\n      });\n    };\n\n    this.requestAddressChange = event => {\n      this.setState({\n        requestAddress: event.target.value\n      });\n    };\n\n    this.onAccountChanged = () => {\n      window.ethereum.on(\"accountsChanged\", () => {\n        window.location.reload();\n      });\n    };\n\n    this.whoami = async () => {\n      var contract = this.state.contract;\n      const cus = await contract.methods.isCus().call({\n        from: this.state.account\n      });\n      const org = await contract.methods.isOrg().call({\n        from: this.state.account\n      });\n      var who = cus ? \"Customer\" : org ? \"Bank\" : \"None\";\n      this.setState({\n        entity: who\n      });\n    };\n\n    this.createmycustomer = async () => {\n      var contract = this.state.contract;\n      await contract.methods.newCustomer(this.state.name, crypto.createHash(\"sha1\").update(this.state.aadhar + this.state.pan).digest(\"hex\"), this.state.bank_verify).send({\n        from: this.state.account\n      }).then(() => {\n        window.alert(\"You successfully made an account!\");\n        window.location.reload();\n      });\n    };\n\n    this.createmybank = async () => {\n      var contract = this.state.contract;\n      await contract.methods.newOrganisation(this.state.bname).send({\n        from: this.state.account\n      }).then(() => {\n        window.alert(\"You are now a verified Bank Entity!\");\n        window.location.reload();\n      });\n    };\n\n    this.verifykycfromcustomer = async () => {\n      var contract = this.state.contract;\n      const response = await contract.methods.viewCustomerData(this.state.getdata).call({\n        from: this.state.account\n      });\n      this.setState({\n        data_hash: response\n      });\n      const dhash = crypto.createHash(\"sha1\").update(this.state.aadharVerify + this.state.panVerify).digest(\"hex\");\n\n      if (dhash === this.state.data_hash) {\n        this.setState({\n          verified: \"Success\"\n        });\n      } else {\n        this.setState({\n          verified: \"Fail\"\n        });\n      }\n    };\n\n    this.get = async () => {\n      var contract = this.state.contract;\n      var access = await contract.methods.isOrg().call({\n        from: this.state.account\n      });\n\n      if (access) {\n        this.verifykycfromcustomer();\n      } else {\n        window.alert(\"You are not a verified Bank!\");\n      }\n    };\n\n    this.create_customer = async e => {\n      e.preventDefault();\n      var contract = this.state.contract;\n      var access = await contract.methods.isCus().call({\n        from: this.state.account\n      });\n\n      if (!access) {\n        this.createmycustomer();\n        this.whoami();\n      } else {\n        window.alert(\"You already have an account!\");\n      }\n    };\n\n    this.create_bank = async e => {\n      e.preventDefault();\n      var contract = this.state.contract;\n      var access = await contract.methods.isOrg().call({\n        from: this.state.account\n      });\n      var ifcustomer = await contract.methods.isCus().call({\n        from: this.state.account\n      });\n\n      if (!access && !ifcustomer) {\n        this.createmybank();\n        this.whoami();\n      } else if (ifcustomer) {\n        window.alert(\"Customer entities cannot be a bank!\");\n      } else {\n        window.alert(\"You are already a bank!\");\n      }\n    };\n\n    this.modify_data = async e => {\n      e.preventDefault();\n      var contract = this.state.contract;\n      var confirm = await contract.methods.isCus().call({\n        from: this.state.account\n      });\n\n      if (confirm) {\n        await contract.methods.modifyCustomerData(this.state.name, crypto.createHash(\"sha1\").update(this.state.name + this.state.aadhar + this.state.pan).digest(\"hex\"), this.state.bank_verify).send({\n          from: this.state.account\n        }).then(() => {\n          window.alert(\"Data Changed!\");\n          window.location.reload();\n        });\n      } else {\n        window.alert(\"You are not permitted to use this function!\");\n      }\n    };\n\n    this.numbanks = async () => {\n      var contract = this.state.contract;\n      var len = await contract.methods.bankslength().call();\n      this.setState({\n        bank_count: len\n      });\n      var banks = [];\n\n      if (parseInt(this.state.bank_count) > 0) {\n        for (var i = 0; i < len; i++) {\n          banks.push({\n            key: i,\n            address: await contract.methods.Banks(i).call()\n          });\n        }\n      }\n\n      this.setState({\n        allbanks: banks\n      });\n    };\n\n    this.getmystatus = async () => {\n      var contract = this.state.contract;\n      var status = await contract.methods.checkStatus().call({\n        from: this.state.account\n      });\n\n      if (status === \"0\") {\n        this.setState({\n          status: \"Accepted\"\n        });\n      } else if (status === \"1\") {\n        this.setState({\n          status: \"Rejected\"\n        });\n      } else if (status === \"2\") {\n        this.setState({\n          status: \"Pending\"\n        });\n      } else {\n        this.setState({\n          status: \"Undefined\"\n        });\n      }\n    };\n\n    this.viewRequests = async () => {\n      var contract = this.state.contract;\n      var reqs = await contract.methods.viewRequests().call({\n        from: this.state.account\n      });\n      var all_reqs = [];\n      var i = 0;\n\n      for (const req in reqs) {\n        all_reqs.push({\n          key: i,\n          address: reqs[req],\n          name: await contract.methods.viewName(reqs[req]).call()\n        });\n        i++;\n      }\n\n      this.setState({\n        bankrequests: all_reqs\n      });\n    };\n\n    this.accept = async () => {\n      var contract = this.state.contract;\n      await contract.methods.changeStatusToAccepted(this.state.requestAddress).send({\n        from: this.state.account\n      }).then(() => {\n        window.alert(\"Status Changed!\");\n        window.location.reload();\n      }, () => {\n        window.alert(\"You are not authorized!\");\n      });\n    };\n\n    this.reject = async () => {\n      var contract = this.state.contract;\n      await contract.methods.changeStatusToRejected(this.state.requestAddress).send({\n        from: this.state.account\n      }).then(() => {\n        window.alert(\"Status Changed!\");\n        window.location.reload();\n      }, () => {\n        window.alert(\"You are not authorized!\");\n      });\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, \"Current Account is a \", this.state.entity, \" entity\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, this.state.account), React.createElement(\"div\", {\n      className: \"form-top-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Verified Organisation Addresses\")), React.createElement(GetAllBankAccounts, {\n      bankcount: this.state.bank_count,\n      banks: this.state.allbanks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"main-buttons-container form-top-padding form-bottom-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        show(\"new-customer\");\n      },\n      id: \"new-customer-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \"New customer\"), React.createElement(\"button\", {\n      onClick: () => {\n        show(\"existing-customer\");\n      },\n      id: \"existing-customer-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    }, \"Existing customer\"), React.createElement(\"button\", {\n      onClick: () => {\n        show(\"new-bank\");\n      },\n      id: \"new-bank-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    }, \"New Organisation\"), React.createElement(\"button\", {\n      onClick: () => {\n        show(\"existing-bank\");\n      },\n      id: \"existing-bank-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443\n      },\n      __self: this\n    }, \"View Organisation internal access\")), React.createElement(\"div\", {\n      className: \"new-customer form-top-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \".\",\n      method: \"\",\n      onSubmit: this.create_customer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-title form-bottom-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, \"Customer Registration Form (New customers only)\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, \"Name as in PAN Card \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myNameChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, \" Aadhar Card No. \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myAadharChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, \"PAN Card No. \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myPanChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }, \"Organisation Address you want to verify your data with\", \" \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myVBankChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Create Customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"new-bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \".\",\n      method: \"\",\n      onSubmit: this.create_bank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-title form-bottom-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, \"Organisation registration form (New organisations only)\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, \"Organisation Name: \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myBankNameChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Create bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"existing-customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \".\",\n      method: \"\",\n      onSubmit: this.modify_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-title form-bottom-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, \"Update existing customer data (existing customers only)\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, \"Name as in PAN Card \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myNameChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \" Aadhar Card No. \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myAadharChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    }, \"PAN Card No. \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myPanChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, \"New Organisation Verify \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.myVBankChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"Change Data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"existing-bank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-title form-bottom-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 542\n      },\n      __self: this\n    }, \"Requests\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.viewRequests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, \"View user Requests\")), React.createElement(GetAllBankRequests, {\n      bankrequests: this.state.bankrequests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-top-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, \"Request Address: \"), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.requestAddressChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.accept,\n      className: \"accept-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"Accept Request\"), React.createElement(\"button\", {\n      onClick: this.reject,\n      className: \"reject-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"Reject Request\"))))), React.createElement(\"div\", {\n      className: \"existing-customer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, \"View Customer Status\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.getmystatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, \"Get Customer Status\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }, \"Customer Status is: \", this.state.status))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Dev/OneDrive/Documents/Blockchain KYC/KYC_Blockchain/client/src/App.js"],"names":["React","Component","KycBlockChain","getWeb3","crypto","require","GetAllBankAccounts","props","parseInt","bankcount","banks","map","bank","key","address","GetAllBankRequests","bankrequests","request","name","hideAll","document","getElementsByClassName","style","display","elements","querySelectorAll","i","length","classList","remove","show","target","getElementById","add","App","state","web3","account","contract","aadhar","pan","getdata","data_hash","b_name","bank_verify","entity","allaccounts","allbanks","bank_count","status","requestAddress","aadharVerify","panVerify","verified","componentDidMount","accounts","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","setState","whoami","numbanks","onAccountChanged","error","alert","console","myNameChangeHandler","event","value","myAadharChangeHandler","myPanChangeHandler","myBankNameChangeHandler","bname","myVBankChangeHandler","requestAddressChange","window","ethereum","on","location","reload","cus","methods","isCus","call","from","org","isOrg","who","createmycustomer","newCustomer","createHash","update","digest","send","then","createmybank","newOrganisation","verifykycfromcustomer","response","viewCustomerData","dhash","get","access","create_customer","e","preventDefault","create_bank","ifcustomer","modify_data","confirm","modifyCustomerData","len","bankslength","push","Banks","getmystatus","checkStatus","viewRequests","reqs","all_reqs","req","viewName","accept","changeStatusToAccepted","reject","changeStatusToRejected","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,WAAP;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AACpC,MAAIC,QAAQ,CAACD,KAAK,CAACE,SAAP,CAAR,GAA4B,CAAhC,EAAmC;AACjC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IACf;AAAG,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,OAAxB,CADD,CADH,CADF;AAOD,GARD,MAQO;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADF,CADF;AAKD;AACF,CAhBD;;AAkBA,MAAMC,kBAAkB,GAAIR,KAAD,IAAW;AACpC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACS,YAAN,CAAmBL,GAAnB,CAAwBM,OAAD,IACtB;AAAG,IAAA,GAAG,EAAEA,OAAO,CAACJ,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,CAACC,IADX,SACoBD,OAAO,CAACH,OAD5B,CADD,CADH,CADF;AASD,CAVD,C,CAWA;;;AACA,MAAMK,OAAO,GAAG,MAAM;AACpBC,EAAAA,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,KAAnD,CAAyDC,OAAzD,GAAmE,MAAnE;AACAH,EAAAA,QAAQ,CAACC,sBAAT,CAAgC,mBAAhC,EAAqD,CAArD,EAAwDC,KAAxD,CAA8DC,OAA9D,GACE,MADF;AAEAH,EAAAA,QAAQ,CAACC,sBAAT,CAAgC,mBAAhC,EAAqD,CAArD,EAAwDC,KAAxD,CAA8DC,OAA9D,GACE,MADF;AAEAH,EAAAA,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,EAA+CC,KAA/C,CAAqDC,OAArD,GAA+D,MAA/D;AACAH,EAAAA,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,EAAoDC,KAApD,CAA0DC,OAA1D,GAAoE,MAApE;AACAH,EAAAA,QAAQ,CAACC,sBAAT,CAAgC,eAAhC,EAAiD,CAAjD,EAAoDC,KAApD,CAA0DC,OAA1D,GAAoE,MAApE;AACA,MAAIC,QAAQ,GAAGJ,QAAQ,CAACK,gBAAT,CAA0B,gBAA1B,CAAf;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCF,IAAAA,QAAQ,CAACE,CAAD,CAAR,CAAYE,SAAZ,CAAsBC,MAAtB,CAA6B,eAA7B;AACD;AACF,CAbD;;AAcA,MAAMC,IAAI,GAAIC,MAAD,IAAY;AACvBZ,EAAAA,OAAO;AACPC,EAAAA,QAAQ,CAACY,cAAT,WAA2BD,MAA3B,cAA4CH,SAA5C,CAAsDK,GAAtD,CAA0D,eAA1D;;AACA,MAAIF,MAAM,KAAK,cAAf,EAA+B;AAC7BX,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,cAAhC,EAAgD,CAAhD,EAAmDC,KAAnD,CAAyDC,OAAzD,GAAmE,OAAnE;AACD;;AACD,MAAIQ,MAAM,KAAK,mBAAf,EAAoC;AAClCX,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,mBAAhC,EAAqD,CAArD,EAAwDC,KAAxD,CAA8DC,OAA9D,GACE,OADF;AAEAH,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,mBAAhC,EAAqD,CAArD,EAAwDC,KAAxD,CAA8DC,OAA9D,GACE,OADF;AAED,GAXsB,CAYvB;AACA;AACA;AACA;;;AACA,MAAIQ,MAAM,KAAK,UAAf,EAA2B;AACzBX,IAAAA,QAAQ,CAACC,sBAAT,CAAgC,UAAhC,EAA4C,CAA5C,EAA+CC,KAA/C,CAAqDC,OAArD,GAA+D,OAA/D;AACD;AACF,CAnBD,C,CAoBA;AAEA;;;AACA,MAAMW,GAAN,SAAkBjC,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BkC,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,OAAO,EAAE,IAFH;AAGNC,MAAAA,QAAQ,EAAE,IAHJ;AAINpB,MAAAA,IAAI,EAAE,IAJA;AAKNqB,MAAAA,MAAM,EAAE,IALF;AAMNC,MAAAA,GAAG,EAAE,IANC;AAONC,MAAAA,OAAO,EAAE,IAPH;AAQNC,MAAAA,SAAS,EAAE,IARL;AASNC,MAAAA,MAAM,EAAE,IATF;AAUNC,MAAAA,WAAW,EAAE,IAVP;AAWNC,MAAAA,MAAM,EAAE,IAXF;AAYNC,MAAAA,WAAW,EAAE,IAZP;AAaNC,MAAAA,QAAQ,EAAE,EAbJ;AAcNC,MAAAA,UAAU,EAAE,CAdN;AAeNC,MAAAA,MAAM,EAAE,IAfF;AAgBNC,MAAAA,cAAc,EAAE,IAhBV;AAiBNlC,MAAAA,YAAY,EAAE,EAjBR;AAkBNmC,MAAAA,YAAY,EAAE,IAlBR;AAmBNC,MAAAA,SAAS,EAAE,IAnBL;AAoBNC,MAAAA,QAAQ,EAAE;AApBJ,KADkB;;AAAA,SAwB1BC,iBAxB0B,GAwBN,YAAY;AAC9B,UAAI;AACF;AACA,cAAMlB,IAAI,GAAG,MAAMjC,OAAO,EAA1B,CAFE,CAIF;;AACA,cAAMoD,QAAQ,GAAG,MAAMnB,IAAI,CAACoB,GAAL,CAASC,WAAT,EAAvB,CALE,CAMF;;AACA,cAAMC,SAAS,GAAG,MAAMtB,IAAI,CAACoB,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;AACA,cAAMC,eAAe,GAAG3D,aAAa,CAAC4D,QAAd,CAAuBJ,SAAvB,CAAxB;AACA,cAAMK,QAAQ,GAAG,IAAI3B,IAAI,CAACoB,GAAL,CAASQ,QAAb,CACf9D,aAAa,CAAC+D,GADC,EAEfJ,eAAe,IAAIA,eAAe,CAAC/C,OAFpB,CAAjB,CATE,CAcF;AACA;;AACA,aAAKoD,QAAL,CAAc;AACZ9B,UAAAA,IADY;AAEZC,UAAAA,OAAO,EAAEkB,QAAQ,CAAC,CAAD,CAFL;AAGZjB,UAAAA,QAAQ,EAAEyB,QAHE;AAIZjB,UAAAA,WAAW,EAAES;AAJD,SAAd;AAMA,aAAKY,MAAL;AACA,aAAKC,QAAL;AACA,aAAKC,gBAAL;AACD,OAzBD,CAyBE,OAAOC,KAAP,EAAc;AACd;AACAC,QAAAA,KAAK,0EAAL;AAGAC,QAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACD;;AACDxC,MAAAA,IAAI,CAAC,cAAD,CAAJ;AACD,KA1DyB;;AAAA,SA4D1B2C,mBA5D0B,GA4DHC,KAAD,IAAW;AAC/B,WAAKR,QAAL,CAAc;AAAEhD,QAAAA,IAAI,EAAEwD,KAAK,CAAC3C,MAAN,CAAa4C;AAArB,OAAd;AACD,KA9DyB;;AAAA,SA+D1BC,qBA/D0B,GA+DDF,KAAD,IAAW;AACjC,WAAKR,QAAL,CAAc;AAAE3B,QAAAA,MAAM,EAAEmC,KAAK,CAAC3C,MAAN,CAAa4C;AAAvB,OAAd;AACD,KAjEyB;;AAAA,SAkE1BE,kBAlE0B,GAkEJH,KAAD,IAAW;AAC9B,WAAKR,QAAL,CAAc;AAAE1B,QAAAA,GAAG,EAAEkC,KAAK,CAAC3C,MAAN,CAAa4C;AAApB,OAAd;AACD,KApEyB;;AAAA,SAsE1BG,uBAtE0B,GAsECJ,KAAD,IAAW;AACnC,WAAKR,QAAL,CAAc;AAAEa,QAAAA,KAAK,EAAEL,KAAK,CAAC3C,MAAN,CAAa4C;AAAtB,OAAd;AACD,KAxEyB;;AAAA,SAsF1BK,oBAtF0B,GAsFFN,KAAD,IAAW;AAChC,WAAKR,QAAL,CAAc;AAAEtB,QAAAA,WAAW,EAAE8B,KAAK,CAAC3C,MAAN,CAAa4C;AAA5B,OAAd;AACD,KAxFyB;;AAAA,SA0F1BM,oBA1F0B,GA0FFP,KAAD,IAAW;AAChC,WAAKR,QAAL,CAAc;AAAEhB,QAAAA,cAAc,EAAEwB,KAAK,CAAC3C,MAAN,CAAa4C;AAA/B,OAAd;AACD,KA5FyB;;AAAA,SA8F1BN,gBA9F0B,GA8FP,MAAM;AACvBa,MAAAA,MAAM,CAACC,QAAP,CAAgBC,EAAhB,CAAmB,iBAAnB,EAAsC,MAAM;AAC1CF,QAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,OAFD;AAGD,KAlGyB;;AAAA,SAoG1BnB,MApG0B,GAoGjB,YAAY;AAAA,UACb7B,QADa,GACA,KAAKH,KADL,CACbG,QADa;AAEnB,YAAMiD,GAAG,GAAG,MAAMjD,QAAQ,CAACkD,OAAT,CACfC,KADe,GAEfC,IAFe,CAEV;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFU,CAAlB;AAGA,YAAMuD,GAAG,GAAG,MAAMtD,QAAQ,CAACkD,OAAT,CACfK,KADe,GAEfH,IAFe,CAEV;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFU,CAAlB;AAIA,UAAIyD,GAAG,GAAGP,GAAG,GAAG,UAAH,GAAgBK,GAAG,GAAG,MAAH,GAAY,MAA5C;AACA,WAAK1B,QAAL,CAAc;AAAErB,QAAAA,MAAM,EAAEiD;AAAV,OAAd;AACD,KA/GyB;;AAAA,SAiH1BC,gBAjH0B,GAiHP,YAAY;AAAA,UACvBzD,QADuB,GACV,KAAKH,KADK,CACvBG,QADuB;AAE7B,YAAMA,QAAQ,CAACkD,OAAT,CACHQ,WADG,CAEF,KAAK7D,KAAL,CAAWjB,IAFT,EAGFd,MAAM,CACH6F,UADH,CACc,MADd,EAEGC,MAFH,CAEU,KAAK/D,KAAL,CAAWI,MAAX,GAAoB,KAAKJ,KAAL,CAAWK,GAFzC,EAGG2D,MAHH,CAGU,KAHV,CAHE,EAOF,KAAKhE,KAAL,CAAWS,WAPT,EASHwD,IATG,CASE;AAAET,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OATF,EAUHgE,IAVG,CAUE,MAAM;AACVnB,QAAAA,MAAM,CAACX,KAAP,CAAa,mCAAb;AACAW,QAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,OAbG,CAAN;AAcD,KAjIyB;;AAAA,SAmI1BgB,YAnI0B,GAmIX,YAAY;AAAA,UACnBhE,QADmB,GACN,KAAKH,KADC,CACnBG,QADmB;AAGzB,YAAMA,QAAQ,CAACkD,OAAT,CACHe,eADG,CACa,KAAKpE,KAAL,CAAW4C,KADxB,EAEHqB,IAFG,CAEE;AAAET,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFF,EAGHgE,IAHG,CAGE,MAAM;AACVnB,QAAAA,MAAM,CAACX,KAAP,CAAa,qCAAb;AACAW,QAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,OANG,CAAN;AAOD,KA7IyB;;AAAA,SA+I1BkB,qBA/I0B,GA+IF,YAAY;AAAA,UAC5BlE,QAD4B,GACf,KAAKH,KADU,CAC5BG,QAD4B;AAElC,YAAMmE,QAAQ,GAAG,MAAMnE,QAAQ,CAACkD,OAAT,CACpBkB,gBADoB,CACH,KAAKvE,KAAL,CAAWM,OADR,EAEpBiD,IAFoB,CAEf;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFe,CAAvB;AAIA,WAAK6B,QAAL,CAAc;AAAExB,QAAAA,SAAS,EAAE+D;AAAb,OAAd;AAEA,YAAME,KAAK,GAAGvG,MAAM,CACjB6F,UADW,CACA,MADA,EAEXC,MAFW,CAEJ,KAAK/D,KAAL,CAAWgB,YAAX,GAA0B,KAAKhB,KAAL,CAAWiB,SAFjC,EAGX+C,MAHW,CAGJ,KAHI,CAAd;;AAKA,UAAIQ,KAAK,KAAK,KAAKxE,KAAL,CAAWO,SAAzB,EAAoC;AAClC,aAAKwB,QAAL,CAAc;AAAEb,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OAFD,MAEO;AACL,aAAKa,QAAL,CAAc;AAAEb,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;AACF,KAjKyB;;AAAA,SAmK1BuD,GAnK0B,GAmKpB,YAAY;AAAA,UACVtE,QADU,GACG,KAAKH,KADR,CACVG,QADU;AAEhB,UAAIuE,MAAM,GAAG,MAAMvE,QAAQ,CAACkD,OAAT,CAChBK,KADgB,GAEhBH,IAFgB,CAEX;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFW,CAAnB;;AAGA,UAAIwE,MAAJ,EAAY;AACV,aAAKL,qBAAL;AACD,OAFD,MAEO;AACLtB,QAAAA,MAAM,CAACX,KAAP,CAAa,8BAAb;AACD;AACF,KA7KyB;;AAAA,SA+K1BuC,eA/K0B,GA+KR,MAAOC,CAAP,IAAa;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AAD6B,UAEvB1E,QAFuB,GAEV,KAAKH,KAFK,CAEvBG,QAFuB;AAG7B,UAAIuE,MAAM,GAAG,MAAMvE,QAAQ,CAACkD,OAAT,CAChBC,KADgB,GAEhBC,IAFgB,CAEX;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFW,CAAnB;;AAIA,UAAI,CAACwE,MAAL,EAAa;AACX,aAAKd,gBAAL;AACA,aAAK5B,MAAL;AACD,OAHD,MAGO;AACLe,QAAAA,MAAM,CAACX,KAAP,CAAa,8BAAb;AACD;AACF,KA5LyB;;AAAA,SA8L1B0C,WA9L0B,GA8LZ,MAAOF,CAAP,IAAa;AACzBA,MAAAA,CAAC,CAACC,cAAF;AADyB,UAEnB1E,QAFmB,GAEN,KAAKH,KAFC,CAEnBG,QAFmB;AAGzB,UAAIuE,MAAM,GAAG,MAAMvE,QAAQ,CAACkD,OAAT,CAChBK,KADgB,GAEhBH,IAFgB,CAEX;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFW,CAAnB;AAIA,UAAI6E,UAAU,GAAG,MAAM5E,QAAQ,CAACkD,OAAT,CACpBC,KADoB,GAEpBC,IAFoB,CAEf;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFe,CAAvB;;AAIA,UAAI,CAACwE,MAAD,IAAW,CAACK,UAAhB,EAA4B;AAC1B,aAAKZ,YAAL;AACA,aAAKnC,MAAL;AACD,OAHD,MAGO,IAAI+C,UAAJ,EAAgB;AACrBhC,QAAAA,MAAM,CAACX,KAAP,CAAa,qCAAb;AACD,OAFM,MAEA;AACLW,QAAAA,MAAM,CAACX,KAAP,CAAa,yBAAb;AACD;AACF,KAjNyB;;AAAA,SAmN1B4C,WAnN0B,GAmNZ,MAAOJ,CAAP,IAAa;AACzBA,MAAAA,CAAC,CAACC,cAAF;AADyB,UAEnB1E,QAFmB,GAEN,KAAKH,KAFC,CAEnBG,QAFmB;AAGzB,UAAI8E,OAAO,GAAG,MAAM9E,QAAQ,CAACkD,OAAT,CACjBC,KADiB,GAEjBC,IAFiB,CAEZ;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFY,CAApB;;AAGA,UAAI+E,OAAJ,EAAa;AACX,cAAM9E,QAAQ,CAACkD,OAAT,CACH6B,kBADG,CAEF,KAAKlF,KAAL,CAAWjB,IAFT,EAGFd,MAAM,CACH6F,UADH,CACc,MADd,EAEGC,MAFH,CAEU,KAAK/D,KAAL,CAAWjB,IAAX,GAAkB,KAAKiB,KAAL,CAAWI,MAA7B,GAAsC,KAAKJ,KAAL,CAAWK,GAF3D,EAGG2D,MAHH,CAGU,KAHV,CAHE,EAOF,KAAKhE,KAAL,CAAWS,WAPT,EASHwD,IATG,CASE;AAAET,UAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,SATF,EAUHgE,IAVG,CAUE,MAAM;AACVnB,UAAAA,MAAM,CAACX,KAAP,CAAa,eAAb;AACAW,UAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,SAbG,CAAN;AAcD,OAfD,MAeO;AACLJ,QAAAA,MAAM,CAACX,KAAP,CAAa,6CAAb;AACD;AACF,KA3OyB;;AAAA,SA6O1BH,QA7O0B,GA6Of,YAAY;AAAA,UACf9B,QADe,GACF,KAAKH,KADH,CACfG,QADe;AAErB,UAAIgF,GAAG,GAAG,MAAMhF,QAAQ,CAACkD,OAAT,CAAiB+B,WAAjB,GAA+B7B,IAA/B,EAAhB;AACA,WAAKxB,QAAL,CAAc;AAAElB,QAAAA,UAAU,EAAEsE;AAAd,OAAd;AACA,UAAI5G,KAAK,GAAG,EAAZ;;AACA,UAAIF,QAAQ,CAAC,KAAK2B,KAAL,CAAWa,UAAZ,CAAR,GAAkC,CAAtC,EAAyC;AACvC,aAAK,IAAItB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4F,GAApB,EAAyB5F,CAAC,EAA1B,EAA8B;AAC5BhB,UAAAA,KAAK,CAAC8G,IAAN,CAAW;AACT3G,YAAAA,GAAG,EAAEa,CADI;AAETZ,YAAAA,OAAO,EAAE,MAAMwB,QAAQ,CAACkD,OAAT,CAAiBiC,KAAjB,CAAuB/F,CAAvB,EAA0BgE,IAA1B;AAFN,WAAX;AAID;AACF;;AAED,WAAKxB,QAAL,CAAc;AAAEnB,QAAAA,QAAQ,EAAErC;AAAZ,OAAd;AACD,KA5PyB;;AAAA,SA8P1BgH,WA9P0B,GA8PZ,YAAY;AAAA,UAClBpF,QADkB,GACL,KAAKH,KADA,CAClBG,QADkB;AAExB,UAAIW,MAAM,GAAG,MAAMX,QAAQ,CAACkD,OAAT,CAChBmC,WADgB,GAEhBjC,IAFgB,CAEX;AAAEC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFW,CAAnB;;AAIA,UAAIY,MAAM,KAAK,GAAf,EAAoB;AAClB,aAAKiB,QAAL,CAAc;AAAEjB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAFD,MAEO,IAAIA,MAAM,KAAK,GAAf,EAAoB;AACzB,aAAKiB,QAAL,CAAc;AAAEjB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAFM,MAEA,IAAIA,MAAM,KAAK,GAAf,EAAoB;AACzB,aAAKiB,QAAL,CAAc;AAAEjB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD,OAFM,MAEA;AACL,aAAKiB,QAAL,CAAc;AAAEjB,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;AACF,KA7QyB;;AAAA,SA+Q1B2E,YA/Q0B,GA+QX,YAAY;AAAA,UACnBtF,QADmB,GACN,KAAKH,KADC,CACnBG,QADmB;AAEzB,UAAIuF,IAAI,GAAG,MAAMvF,QAAQ,CAACkD,OAAT,CAAiBoC,YAAjB,GAAgClC,IAAhC,CAAqC;AACpDC,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AADmC,OAArC,CAAjB;AAGA,UAAIyF,QAAQ,GAAG,EAAf;AACA,UAAIpG,CAAC,GAAG,CAAR;;AACA,WAAK,MAAMqG,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,QAAAA,QAAQ,CAACN,IAAT,CAAc;AACZ3G,UAAAA,GAAG,EAAEa,CADO;AAEZZ,UAAAA,OAAO,EAAE+G,IAAI,CAACE,GAAD,CAFD;AAGZ7G,UAAAA,IAAI,EAAE,MAAMoB,QAAQ,CAACkD,OAAT,CAAiBwC,QAAjB,CAA0BH,IAAI,CAACE,GAAD,CAA9B,EAAqCrC,IAArC;AAHA,SAAd;AAKAhE,QAAAA,CAAC;AACF;;AACD,WAAKwC,QAAL,CAAc;AAAElD,QAAAA,YAAY,EAAE8G;AAAhB,OAAd;AACD,KA/RyB;;AAAA,SAiS1BG,MAjS0B,GAiSjB,YAAY;AAAA,UACb3F,QADa,GACA,KAAKH,KADL,CACbG,QADa;AAEnB,YAAMA,QAAQ,CAACkD,OAAT,CACH0C,sBADG,CACoB,KAAK/F,KAAL,CAAWe,cAD/B,EAEHkD,IAFG,CAEE;AAAET,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFF,EAGHgE,IAHG,CAIF,MAAM;AACJnB,QAAAA,MAAM,CAACX,KAAP,CAAa,iBAAb;AACAW,QAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,OAPC,EAQF,MAAM;AACJJ,QAAAA,MAAM,CAACX,KAAP,CAAa,yBAAb;AACD,OAVC,CAAN;AAYD,KA/SyB;;AAAA,SAiT1B4D,MAjT0B,GAiTjB,YAAY;AAAA,UACb7F,QADa,GACA,KAAKH,KADL,CACbG,QADa;AAEnB,YAAMA,QAAQ,CAACkD,OAAT,CACH4C,sBADG,CACoB,KAAKjG,KAAL,CAAWe,cAD/B,EAEHkD,IAFG,CAEE;AAAET,QAAAA,IAAI,EAAE,KAAKxD,KAAL,CAAWE;AAAnB,OAFF,EAGHgE,IAHG,CAIF,MAAM;AACJnB,QAAAA,MAAM,CAACX,KAAP,CAAa,iBAAb;AACAW,QAAAA,MAAM,CAACG,QAAP,CAAgBC,MAAhB;AACD,OAPC,EAQF,MAAM;AACJJ,QAAAA,MAAM,CAACX,KAAP,CAAa,yBAAb;AACD,OAVC,CAAN;AAYD,KA/TyB;AAAA;;AAiU1B8D,EAAAA,MAAM,GAAG;AACP,QAAI,CAAC,KAAKlG,KAAL,CAAWC,IAAhB,EAAsB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAAP;AACD;;AAED,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA0B,KAAKD,KAAL,CAAWU,MAArC,YADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWE,OAAhB,CAFF,EAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CADF,EAME,oBAAC,kBAAD;AACE,MAAA,SAAS,EAAE,KAAKF,KAAL,CAAWa,UADxB;AAEE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWY,QAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADA,CAHF,EAiBE;AAAK,MAAA,SAAS,EAAC,6DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,MAAM;AACbjB,QAAAA,IAAI,CAAC,cAAD,CAAJ;AACD,OAHH;AAIE,MAAA,EAAE,EAAC,qBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EASE;AACE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,IAAI,CAAC,mBAAD,CAAJ;AACD,OAHH;AAIE,MAAA,EAAE,EAAC,0BAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATF,EAiBE;AACE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,IAAI,CAAC,UAAD,CAAJ;AACD,OAHH;AAIE,MAAA,EAAE,EAAC,iBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAjBF,EAyBE;AACE,MAAA,OAAO,EAAE,MAAM;AACbA,QAAAA,IAAI,CAAC,eAAD,CAAJ;AACD,OAHH;AAIE,MAAA,EAAE,EAAC,sBAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAzBF,CAjBF,EAsDE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,MAAM,EAAC,GAAb;AAAiB,MAAA,MAAM,EAAC,EAAxB;AAA2B,MAAA,QAAQ,EAAE,KAAKgF,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDADA,CAFJ,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKrC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKG,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAhBF,EAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEACyD,GADzD,CADF,EAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKG,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CArBF,EA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,KAAK,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA3BF,CADF,CADF,CAtDF,EA0FE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,MAAM,EAAC,GAAb;AAAiB,MAAA,MAAM,EAAC,EAAxB;AAA2B,MAAA,QAAQ,EAAE,KAAKiC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADJ,CADA,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKnC,uBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,KAAK,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,CADF,CADF,CA1FF,EA2GE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,MAAM,EAAC,GAAb;AAAiB,MAAA,MAAM,EAAC,EAAxB;AAA2B,MAAA,QAAQ,EAAE,KAAKqC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADJ,CAFA,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAK1C,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKG,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKG,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAmC,MAAA,KAAK,EAAC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,CADF,CADF,CA3GF,EA0IE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADN,CADA,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAK4C,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAJF,EAOE,oBAAC,kBAAD;AAAoB,MAAA,YAAY,EAAE,KAAKzF,KAAL,CAAWnB,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKiE,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKgD,MAAtB;AAA8B,MAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAKE;AAAQ,MAAA,OAAO,EAAE,KAAKE,MAAtB;AAA8B,MAAA,SAAS,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CANA,CARF,CADF,CA1IF,EA6LE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKT,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAwB,KAAKvF,KAAL,CAAWc,MAAnC,CAPF,CAFF,CA7LF,CADF;AA4MD;;AAlhByB;;AAqhB5B,eAAef,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport KycBlockChain from \"./contracts/KycBlockChain.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport \"./App.css\";\r\nconst crypto = require(\"crypto\");\r\n\r\nconst GetAllBankAccounts = (props) => {\r\n  if (parseInt(props.bankcount) > 0) {\r\n    return (\r\n      <div>\r\n        {props.banks.map((bank) => (\r\n          <p key={bank.key}>{bank.address}</p>\r\n        ))}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <p>There are no verified Bank Accounts in this network!</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst GetAllBankRequests = (props) => {\r\n  return (\r\n    <div>\r\n      {props.bankrequests.map((request) => (\r\n        <p key={request.key}>\r\n          {request.name} - {request.address}\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n//------tab navigation starts here--------\r\nconst hideAll = () => {\r\n  document.getElementsByClassName(\"new-customer\")[0].style.display = \"none\";\r\n  document.getElementsByClassName(\"existing-customer\")[0].style.display =\r\n    \"none\";\r\n  document.getElementsByClassName(\"existing-customer\")[1].style.display =\r\n    \"none\";\r\n  document.getElementsByClassName(\"new-bank\")[0].style.display = \"none\";\r\n  document.getElementsByClassName(\"existing-bank\")[0].style.display = \"none\";\r\n  document.getElementsByClassName(\"existing-bank\")[1].style.display = \"none\";\r\n  let elements = document.querySelectorAll(\".active-button\");\r\n  for (var i = 0; i < elements.length; i++) {\r\n    elements[i].classList.remove(\"active-button\");\r\n  }\r\n};\r\nconst show = (target) => {\r\n  hideAll();\r\n  document.getElementById(`${target}-button`).classList.add(\"active-button\");\r\n  if (target === \"new-customer\") {\r\n    document.getElementsByClassName(\"new-customer\")[0].style.display = \"block\";\r\n  }\r\n  if (target === \"existing-customer\") {\r\n    document.getElementsByClassName(\"existing-customer\")[0].style.display =\r\n      \"block\";\r\n    document.getElementsByClassName(\"existing-customer\")[1].style.display =\r\n      \"block\";\r\n  }\r\n  // if (target === \"existing-bank\") {\r\n  //   document.getElementsByClassName(\"existing-bank\")[0].style.display = \"block\";\r\n  //   document.getElementsByClassName(\"existing-bank\")[1].style.display = \"block\";\r\n  // }\r\n  if (target === \"new-bank\") {\r\n    document.getElementsByClassName(\"new-bank\")[0].style.display = \"block\";\r\n  }\r\n};\r\n//------tab navigation ends here--------\r\n\r\n//setting state values\r\nclass App extends Component {\r\n  state = {\r\n    web3: null,\r\n    account: null,\r\n    contract: null,\r\n    name: null,\r\n    aadhar: null,\r\n    pan: null,\r\n    getdata: null,\r\n    data_hash: null,\r\n    b_name: null,\r\n    bank_verify: null,\r\n    entity: null,\r\n    allaccounts: null,\r\n    allbanks: [],\r\n    bank_count: 0,\r\n    status: null,\r\n    requestAddress: null,\r\n    bankrequests: [],\r\n    aadharVerify: null,\r\n    panVerify: null,\r\n    verified: null,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n\r\n      // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = KycBlockChain.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        KycBlockChain.abi,\r\n        deployedNetwork && deployedNetwork.address\r\n      );\r\n\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      this.setState({\r\n        web3,\r\n        account: accounts[0],\r\n        contract: instance,\r\n        allaccounts: accounts,\r\n      });\r\n      this.whoami();\r\n      this.numbanks();\r\n      this.onAccountChanged();\r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`\r\n      );\r\n      console.error(error);\r\n    }\r\n    show(\"new-customer\");\r\n  };\r\n\r\n  myNameChangeHandler = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n  myAadharChangeHandler = (event) => {\r\n    this.setState({ aadhar: event.target.value });\r\n  };\r\n  myPanChangeHandler = (event) => {\r\n    this.setState({ pan: event.target.value });\r\n  };\r\n\r\n  myBankNameChangeHandler = (event) => {\r\n    this.setState({ bname: event.target.value });\r\n  };\r\n\r\n  // myDataChangeHandler = (event) => {\r\n  //   this.setState({ getdata: event.target.value });\r\n  // };\r\n\r\n  // myData1ChangeHandler = (event) => {\r\n  //   this.setState({ aadharVerify: event.target.value });\r\n  // };\r\n\r\n  // myData2ChangeHandler = (event) => {\r\n  //   this.setState({ panVerify: event.target.value });\r\n  // };\r\n\r\n  myVBankChangeHandler = (event) => {\r\n    this.setState({ bank_verify: event.target.value });\r\n  };\r\n\r\n  requestAddressChange = (event) => {\r\n    this.setState({ requestAddress: event.target.value });\r\n  };\r\n\r\n  onAccountChanged = () => {\r\n    window.ethereum.on(\"accountsChanged\", () => {\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  whoami = async () => {\r\n    var { contract } = this.state;\r\n    const cus = await contract.methods\r\n      .isCus()\r\n      .call({ from: this.state.account });\r\n    const org = await contract.methods\r\n      .isOrg()\r\n      .call({ from: this.state.account });\r\n\r\n    var who = cus ? \"Customer\" : org ? \"Bank\" : \"None\";\r\n    this.setState({ entity: who });\r\n  };\r\n\r\n  createmycustomer = async () => {\r\n    var { contract } = this.state;\r\n    await contract.methods\r\n      .newCustomer(\r\n        this.state.name,\r\n        crypto\r\n          .createHash(\"sha1\")\r\n          .update(this.state.aadhar + this.state.pan)\r\n          .digest(\"hex\"),\r\n        this.state.bank_verify\r\n      )\r\n      .send({ from: this.state.account })\r\n      .then(() => {\r\n        window.alert(\"You successfully made an account!\");\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  createmybank = async () => {\r\n    var { contract } = this.state;\r\n\r\n    await contract.methods\r\n      .newOrganisation(this.state.bname)\r\n      .send({ from: this.state.account })\r\n      .then(() => {\r\n        window.alert(\"You are now a verified Bank Entity!\");\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  verifykycfromcustomer = async () => {\r\n    var { contract } = this.state;\r\n    const response = await contract.methods\r\n      .viewCustomerData(this.state.getdata)\r\n      .call({ from: this.state.account });\r\n\r\n    this.setState({ data_hash: response });\r\n\r\n    const dhash = crypto\r\n      .createHash(\"sha1\")\r\n      .update(this.state.aadharVerify + this.state.panVerify)\r\n      .digest(\"hex\");\r\n\r\n    if (dhash === this.state.data_hash) {\r\n      this.setState({ verified: \"Success\" });\r\n    } else {\r\n      this.setState({ verified: \"Fail\" });\r\n    }\r\n  };\r\n\r\n  get = async () => {\r\n    var { contract } = this.state;\r\n    var access = await contract.methods\r\n      .isOrg()\r\n      .call({ from: this.state.account });\r\n    if (access) {\r\n      this.verifykycfromcustomer();\r\n    } else {\r\n      window.alert(\"You are not a verified Bank!\");\r\n    }\r\n  };\r\n\r\n  create_customer = async (e) => {\r\n    e.preventDefault();\r\n    var { contract } = this.state;\r\n    var access = await contract.methods\r\n      .isCus()\r\n      .call({ from: this.state.account });\r\n\r\n    if (!access) {\r\n      this.createmycustomer();\r\n      this.whoami();\r\n    } else {\r\n      window.alert(\"You already have an account!\");\r\n    }\r\n  };\r\n\r\n  create_bank = async (e) => {\r\n    e.preventDefault();\r\n    var { contract } = this.state;\r\n    var access = await contract.methods\r\n      .isOrg()\r\n      .call({ from: this.state.account });\r\n\r\n    var ifcustomer = await contract.methods\r\n      .isCus()\r\n      .call({ from: this.state.account });\r\n\r\n    if (!access && !ifcustomer) {\r\n      this.createmybank();\r\n      this.whoami();\r\n    } else if (ifcustomer) {\r\n      window.alert(\"Customer entities cannot be a bank!\");\r\n    } else {\r\n      window.alert(\"You are already a bank!\");\r\n    }\r\n  };\r\n\r\n  modify_data = async (e) => {\r\n    e.preventDefault();\r\n    var { contract } = this.state;\r\n    var confirm = await contract.methods\r\n      .isCus()\r\n      .call({ from: this.state.account });\r\n    if (confirm) {\r\n      await contract.methods\r\n        .modifyCustomerData(\r\n          this.state.name,\r\n          crypto\r\n            .createHash(\"sha1\")\r\n            .update(this.state.name + this.state.aadhar + this.state.pan)\r\n            .digest(\"hex\"),\r\n          this.state.bank_verify\r\n        )\r\n        .send({ from: this.state.account })\r\n        .then(() => {\r\n          window.alert(\"Data Changed!\");\r\n          window.location.reload();\r\n        });\r\n    } else {\r\n      window.alert(\"You are not permitted to use this function!\");\r\n    }\r\n  };\r\n\r\n  numbanks = async () => {\r\n    var { contract } = this.state;\r\n    var len = await contract.methods.bankslength().call();\r\n    this.setState({ bank_count: len });\r\n    var banks = [];\r\n    if (parseInt(this.state.bank_count) > 0) {\r\n      for (var i = 0; i < len; i++) {\r\n        banks.push({\r\n          key: i,\r\n          address: await contract.methods.Banks(i).call(),\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({ allbanks: banks });\r\n  };\r\n\r\n  getmystatus = async () => {\r\n    var { contract } = this.state;\r\n    var status = await contract.methods\r\n      .checkStatus()\r\n      .call({ from: this.state.account });\r\n\r\n    if (status === \"0\") {\r\n      this.setState({ status: \"Accepted\" });\r\n    } else if (status === \"1\") {\r\n      this.setState({ status: \"Rejected\" });\r\n    } else if (status === \"2\") {\r\n      this.setState({ status: \"Pending\" });\r\n    } else {\r\n      this.setState({ status: \"Undefined\" });\r\n    }\r\n  };\r\n\r\n  viewRequests = async () => {\r\n    var { contract } = this.state;\r\n    var reqs = await contract.methods.viewRequests().call({\r\n      from: this.state.account,\r\n    });\r\n    var all_reqs = [];\r\n    var i = 0;\r\n    for (const req in reqs) {\r\n      all_reqs.push({\r\n        key: i,\r\n        address: reqs[req],\r\n        name: await contract.methods.viewName(reqs[req]).call(),\r\n      });\r\n      i++;\r\n    }\r\n    this.setState({ bankrequests: all_reqs });\r\n  };\r\n\r\n  accept = async () => {\r\n    var { contract } = this.state;\r\n    await contract.methods\r\n      .changeStatusToAccepted(this.state.requestAddress)\r\n      .send({ from: this.state.account })\r\n      .then(\r\n        () => {\r\n          window.alert(\"Status Changed!\");\r\n          window.location.reload();\r\n        },\r\n        () => {\r\n          window.alert(\"You are not authorized!\");\r\n        }\r\n      );\r\n  };\r\n\r\n  reject = async () => {\r\n    var { contract } = this.state;\r\n    await contract.methods\r\n      .changeStatusToRejected(this.state.requestAddress)\r\n      .send({ from: this.state.account })\r\n      .then(\r\n        () => {\r\n          window.alert(\"Status Changed!\");\r\n          window.location.reload();\r\n        },\r\n        () => {\r\n          window.alert(\"You are not authorized!\");\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.web3) {\r\n      return <div>Loading Web3, accounts, and contract...</div>;\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h2>Current Account is a {this.state.entity} entity</h2>\r\n        <h3>{this.state.account}</h3>\r\n        <div className=\"form-top-padding\">\r\n        <fieldset>\r\n          <div className=\"form-title\">\r\n            <strong>\r\n            Verified Organisation Addresses\r\n            </strong>\r\n            </div>\r\n          <GetAllBankAccounts\r\n            bankcount={this.state.bank_count}\r\n            banks={this.state.allbanks}\r\n          />\r\n        </fieldset>\r\n        </div>\r\n   \r\n        <div className=\"main-buttons-container form-top-padding form-bottom-padding\">\r\n          <button\r\n            onClick={() => {\r\n              show(\"new-customer\");\r\n            }}\r\n            id=\"new-customer-button\"\r\n          >\r\n            New customer\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              show(\"existing-customer\");\r\n            }}\r\n            id=\"existing-customer-button\"\r\n          >\r\n            Existing customer\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              show(\"new-bank\");\r\n            }}\r\n            id=\"new-bank-button\"\r\n          >\r\n            New Organisation\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              show(\"existing-bank\");\r\n            }}\r\n            id=\"existing-bank-button\"\r\n          >\r\n            View Organisation internal access\r\n          </button>\r\n        </div>\r\n\r\n      \r\n\r\n        <div className=\"new-customer form-top-padding\">\r\n          <form action=\".\" method=\"\" onSubmit={this.create_customer}>\r\n            <fieldset>\r\n           \r\n                <div className=\"form-title form-bottom-padding\">\r\n                <strong>Customer Registration Form (New customers only)</strong>\r\n                </div>\r\n\r\n              <p>\r\n                <label>Name as in PAN Card </label>\r\n                <input type=\"text\" onChange={this.myNameChangeHandler} />\r\n              </p>\r\n\r\n              <p>\r\n                <label> Aadhar Card No. </label>\r\n                <input type=\"text\" onChange={this.myAadharChangeHandler} />\r\n              </p>\r\n\r\n              <p>\r\n                <label>PAN Card No. </label>\r\n                <input type=\"text\" onChange={this.myPanChangeHandler} />\r\n              </p>\r\n\r\n              <p>\r\n                <label>\r\n                  Organisation Address you want to verify your data with{\" \"}\r\n                </label>\r\n                <input type=\"text\" onChange={this.myVBankChangeHandler} />\r\n              </p>\r\n              <p>\r\n                <input type=\"submit\" name=\"submit\" value=\"Create Customer\" />\r\n              </p>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"new-bank\">\r\n          <form action=\".\" method=\"\" onSubmit={this.create_bank}>\r\n            <fieldset>\r\n            <div className=\"form-title form-bottom-padding\">\r\n                <strong>Organisation registration form (New organisations only)</strong>\r\n                </div>\r\n              <p>\r\n                <label>Organisation Name: </label>\r\n                <input type=\"text\" onChange={this.myBankNameChangeHandler} />\r\n              </p>\r\n              <p>\r\n                <input type=\"submit\" name=\"submit\" value=\"Create bank\" />\r\n              </p>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"existing-customer\">\r\n          <form action=\".\" method=\"\" onSubmit={this.modify_data}>\r\n            <fieldset>\r\n              \r\n            <div className=\"form-title form-bottom-padding\">\r\n                <strong>Update existing customer data (existing customers only)</strong>\r\n             </div>\r\n              \r\n              <p>\r\n                <label>Name as in PAN Card </label>\r\n                <input type=\"text\" onChange={this.myNameChangeHandler} />\r\n              </p>\r\n              <p>\r\n                <label> Aadhar Card No. </label>\r\n                <input type=\"text\" onChange={this.myAadharChangeHandler} />\r\n              </p>\r\n              <p>\r\n                <label>PAN Card No. </label>\r\n                <input type=\"text\" onChange={this.myPanChangeHandler} />\r\n              </p>\r\n              <p>\r\n                <label>New Organisation Verify </label>\r\n                <input type=\"text\" onChange={this.myVBankChangeHandler} />\r\n              </p>\r\n              <p>\r\n                <input type=\"submit\" name=\"submit\" value=\"Change Data\" />\r\n              </p>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n\r\n        <div className=\"existing-bank\">\r\n          <fieldset>\r\n          <div className=\"form-title form-bottom-padding\">\r\n                <strong>Requests</strong>\r\n             </div>\r\n            <p>\r\n              <button onClick={this.viewRequests}>View user Requests</button>\r\n            </p>\r\n            <GetAllBankRequests bankrequests={this.state.bankrequests} />\r\n            <div className=\"form-top-padding\">\r\n            <p>\r\n              <label>Request Address: </label>\r\n              <input type=\"text\" onChange={this.requestAddressChange} />\r\n            </p>\r\n\r\n            <p>\r\n              <button onClick={this.accept} className=\"accept-button\">\r\n                Accept Request\r\n              </button>\r\n\r\n              <button onClick={this.reject} className=\"reject-button\">\r\n                Reject Request\r\n              </button>\r\n            </p>\r\n            </div>\r\n          </fieldset>\r\n        </div>\r\n\r\n        {/* <div className=\"existing-bank\">\r\n          <br />\r\n          <div>\r\n            <label>\r\n              <strong>Verify Customer Data</strong>\r\n            </label>\r\n            <p>\r\n              <label>User Address </label>\r\n              <input type=\"text\" onChange={this.myDataChangeHandler} />\r\n            </p>\r\n            <p>\r\n              <label>Aadhar Card No.</label>\r\n              <input type=\"text\" onChange={this.myData1ChangeHandler} />\r\n            </p>\r\n            <p>\r\n              <label>PAN Card No. </label>\r\n              <input type=\"text\" onChange={this.myData2ChangeHandler} />\r\n            </p>\r\n            <button onClick={this.get}>Verify</button>\r\n            <p>Verification: {this.state.verified}</p>\r\n          </div>\r\n        </div> */}\r\n\r\n        <div className=\"existing-customer\">\r\n          <br />\r\n          <div>\r\n            <label>\r\n              <strong>View Customer Status</strong>\r\n            </label>\r\n            <p>\r\n              <button onClick={this.getmystatus}>Get Customer Status</button>\r\n            </p>\r\n            <p>Customer Status is: {this.state.status}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}